---
import Link from '../components/Link'
import Layout from '../layouts/Layout.astro'
import { Periods, type CategoryCount, type LinkData } from '../types'

// get auth token and user if user signed in
const token = Astro.cookies.get('token')?.value
const user: string | undefined = Astro.cookies.get('user')?.value

const popular_cats_resp = await (token
	? fetch('http://127.0.0.1:8000/tags/popular', {
			headers: { Authorization: `Bearer ${token}` },
		})
	: fetch('http://127.0.0.1:8000/tags/popular'))
// [{Category: 'umvc3', Count: 1}, ...]
const popular_cats: CategoryCount[] = await popular_cats_resp.json()

const get_links_resp = await (token
	? fetch('http://127.0.0.1:8000/links/month', {
			headers: { Authorization: `Bearer ${token}` },
		})
	: fetch('http://127.0.0.1:8000/links/month'))
const links: LinkData[] = await get_links_resp.json()
// [{URL: 'https://example.com', LikeCount: 100}, ...]
const other_periods = Periods.filter((other) => other !== 'month')
---

<Layout Title='Welcome to the Open Internet Treasure Map (OITM)'>
	<script>
		const scroll_up_btn = document.getElementById('scroll-up-btn')
		const title_section = document.querySelector('section:has(h1)')

		function assign_scroll_observer() {
			if (!scroll_up_btn || !title_section) {
				return
			}
			const observer = new IntersectionObserver((entries) => {
				entries.forEach((entry) => {
					if (!entry.isIntersecting) {
						scroll_up_btn.style.display = 'flex'
					} else {
						scroll_up_btn.style.display = 'none'
					}
				})
			})
			observer.observe(title_section)
		}

		function assign_scroll_click_handler() {
			if (!scroll_up_btn) {
				return
			}

			scroll_up_btn.addEventListener('click', () => {
				window.scrollTo({ top: 0 })
			})
		}

		assign_scroll_observer()
		assign_scroll_click_handler()
	</script>
	<main>
		<section>
			<img class='chest-backdrop' src='../../chest.svg' />
			<h1>Welcome to OITM</h1>
			<h2 class='subtitle'>a map of the web's treasures</h2>
			{
				user ? (
					<p>
						<a href={`/new`}>Submit new link</a>
					</p>
				) : null
			}
		</section>
		<section>
			<h2>Popular Categories</h2>
			<ol id='popular'>
				{
					popular_cats.map((cat) => (
						<li>
							<a href={`/cat/${cat.Category}`}>{cat.Category}</a>
							<span>({cat.Count})</span>
						</li>
					))
				}
			</ol>
		</section>
		<section>
			<h3>Top Links This Month</h3>
			<div id='change-period'>
				<p>Change period:</p>
				{
					other_periods.map((period) => (
						<a class='period' href={`/top/${period}`}>
							{period}
						</a>
					))
				}
			</div>
			<ol id='top-links'>
				{
					links.map((link) => (
						<Link
							client:load
							Link={link}
							IsSummaryPage={false}
							IsTagPage={false}
							Token={token}
							User={user}
						/>
					))
				}
			</ol>
		</section>
		<div id='scroll-up-btn'>
			<svg
				xmlns='http://www.w3.org/2000/svg'
				width='24px'
				height='24px'
				viewBox='0 0 24 24'
			>
				<path
					fill='currentColor'
					d='M12.75 20a.75.75 0 0 1-1.5 0v-9.25H6a.75.75 0 0 1-.53-1.28l6-6a.75.75 0 0 1 1.06 0l6 6a.75.75 0 0 1-.53 1.28h-5.25z'
				></path>
			</svg>
			<p>To Top</p>
		</div>
	</main>
</Layout>

<style>
	.chest-backdrop {
		position: absolute;
		top: 1em;
		left: 50%;
		transform: translatex(-50%);
		width: 180px;
		height: auto;
		opacity: 0.25;
		z-index: -1;
	}
	.subtitle {
		font-size: 1rem;
		margin-bottom: 60px;
		background: rgba(var(--accent-light), 5%);
		padding: 3px;
		text-align: center;
	}
	#popular {
		display: flex;
		flex-direction: column;
		flex-wrap: wrap;
		height: 160px;
	}
	#change-period {
		font-size: 0.9rem;
		display: flex;

		p {
			margin-top: 0;
		}
	}
	.period {
		margin-left: 0.5rem;
	}
	#top-links {
		padding: 0;
	}
	#scroll-up-btn {
		display: none;
		flex-direction: column;
		align-items: center;
		position: fixed;
		bottom: 10px;
		right: max(10px, calc((100% - min(100%, 800px)) / 4 - 25px));
	}
	#scroll-up-btn svg {
		width: 24px;
		height: 24px;
	}
	#scroll-up-btn p {
		font-size: 0.9rem;
		margin: 0;
	}
	#scroll-up-btn:hover {
		cursor: pointer;
	}
	#scroll-up-btn.visible {
		display: flex;
	}
</style>
