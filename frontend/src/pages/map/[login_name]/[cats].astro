---
import Link from '../../../components/Link'
import ScrollUp from '../../../components/ScrollUp.astro'
import TagCategory from '../../../components/TagCategory'
import Layout from '../../../layouts/Layout.astro'
import type { FilteredTreasureMap } from '../../../types'
import { tmap_sections } from '../../../types'

const { login_name, cats: categories } = Astro.params
if (!login_name) {
	return Astro.redirect('/')
} else if (!categories) {
	return Astro.redirect(`/map/${login_name}`)
}
const cats_split = categories.split(',')

const token = Astro.cookies.get('token')?.value
const signed_in_user = Astro.cookies.get('user')?.value

const tmap_resp = token
	? await fetch(`http://127.0.0.1:8000/map/${login_name}/${categories}`, {
			headers: {
				Authorization: `Bearer ${token}`,
			},
		})
	: await fetch(`http://127.0.0.1:8000/map/${login_name}/${categories}`)
if (tmap_resp.status > 399) {
	return Astro.redirect('/404')
}
const tmap: FilteredTreasureMap = await tmap_resp.json()
// Submitted: [{URL: 'https://example.com', LikeCount: 100}, ...],
// Copied: [{URL: 'https://example.com', LikeCount: 1}, ...]
// Tagged: [{URL: 'https://example.com', LikeCount: 2}, ...],
// CategoryCounts: [{Category: 'umvc3', Count: 1}, ...],
const used_sections = tmap_sections.filter((s) => tmap[s].length)
if (!used_sections.length) {
	return Astro.redirect(`/map/${login_name}`)
}
---

<Layout Title=`${login_name}'s Treasure Map (Filtered)`>
	<main>
		<h1>{login_name}'s Treasure Map</h1>
		<h2 class='subtitle'>(Filtered)</h2>
		<section id='filters'>
			<div>
				<h2>Filter Category(ies)</h2>
				<p id='reset-category-filters'>
					<a href={`/map/${login_name}`}>Reset</a>
				</p>
			</div>
			<ul id='categories-grid'>
				{
					cats_split.length > 1 ? (
						cats_split.map((cat) => {
							return (
								<TagCategory
									Category={cat}
									EditActivated={false}
									Deleted={undefined}
								/>
							)
						})
					) : (
						<TagCategory
							Category={cats_split[0]}
							EditActivated={false}
							Deleted={undefined}
						/>
					)
				}
			</ul>
		</section>
		<section id='overview'>
			<div>
				<h2>Subcategories</h2>
				{
					tmap.Categories.length ? (
						<ol>
							{tmap.Categories.map((cat) => (
								<li>
									<a
										href={`/map/${login_name}/${categories},${cat.Category}`}
									>
										{cat.Category}
									</a>
									<span>({cat.Count})</span>
								</li>
							))}
						</ol>
					) : (
						<p>No further subcategories.</p>
					)
				}
			</div>
			<div>
				<h2>Skip to Section</h2>
				<ul id='skip_to_link_section'>
					{
						used_sections.map((s) => (
							<li>
								<a href={`#${s}`}>{s}</a>
							</li>
						))
					}
				</ul>
			</div>
		</section>

		{
			used_sections.map((s) => {
				return (
					<section id={s} class='link_section'>
						<h2>{s}</h2>
						<ol>
							{tmap[s].map((link) => {
								if (s === 'Submitted' || s === 'Tagged') {
									return (
										<Link
											client:load
											Link={link}
											CategoriesFromUser={login_name}
											IsSummaryPage={false}
											IsTagPage={false}
											Token={token}
											User={signed_in_user}
										/>
									)
								} else {
									return (
										<Link
											client:load
											Link={link}
											CategoriesFromUser={
												link.CategoriesFromUser
													? login_name
													: undefined
											}
											IsSummaryPage={false}
											IsTagPage={false}
											Token={token}
											User={signed_in_user}
										/>
									)
								}
							})}
						</ol>
					</section>
				)
			})
		}

		<ScrollUp />
	</main>
</Layout>

<style>
	h1 {
		margin-bottom: 10px;
	}
	#reset-category-filters {
		margin: 0;
	}
	#categories-grid {
		display: flex;
		flex-wrap: wrap;
		align-content: flex-start;
		padding-inline-start: 0;
		gap: 10px;
	}
	#filters,
	#overview {
		display: flex;
		gap: 50px;
	}
	:is(#filters, #overview) > * {
		width: 50%;
	}
	#skip_to_link_section {
		list-style: none;
		padding: 0;
	}
	.link_section h2 {
		position: sticky;
		top: 0px;
		padding: 10px 0;
		background-color: #13151a;
	}
</style>
