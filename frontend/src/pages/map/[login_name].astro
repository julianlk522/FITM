---
import Link from '../../components/Link'
import ProfilePic from '../../components/ProfilePic'
import Layout from '../../layouts/Layout.astro'
import type { TreasureMap, User } from '../../types'
import { tmap_sections } from '../../types'
import format_date from '../../util/format_date'

const { login_name } = Astro.params
if (!login_name) {
	return Astro.redirect('/')
}

const token = Astro.cookies.get('token')?.value
const signed_in_user = Astro.cookies.get('user')?.value

const tmap_resp = token
	? await fetch(`http://127.0.0.1:8000/map/${login_name}`, {
			headers: {
				Authorization: `Bearer ${token}`,
			},
		})
	: await fetch(`http://127.0.0.1:8000/map/${login_name}`)
if (tmap_resp.status > 399) {
	return Astro.redirect('/404')
}
const tmap: TreasureMap = await tmap_resp.json()
// Submitted: [{URL: 'https://example.com', LikeCount: 100}, ...],
// Tagged: [{URL: 'https://example.com', LikeCount: 2}, ...],
// Copied: [{URL: 'https://example.com', LikeCount: 1}, ...]
// CategoryCounts: [{Category: 'umvc3', Count: 1}, ...],

const used_sections = tmap_sections.filter((s) => tmap[s].length)
if (!used_sections.length) {
	return Astro.redirect(`/map/${login_name}`)
}

const user_resp = await fetch(`http://127.0.0.1:8000/users/${login_name}`)
if (user_resp.status > 399) {
	return Astro.redirect('/404')
}
const user: User = await user_resp.json()
// {LoginName: 'bob', About: '...', PFP: '...', Created: '2022-01-01 00:00:00'}
---

<Layout Title=`${login_name}'s Treasure Map`>
	<main>
		<h1>{login_name}'s Treasure Map</h1>
		<ProfilePic
			client:load
			PFP={user.PFP ? user.PFP : undefined}
			LoginName={login_name}
			SignedInUser={signed_in_user}
			Token={token}
		/>
		<p>Created: {format_date(user.Created)}</p>
		{
			user.About ? (
				<>
					<h2>About</h2>
					<p>{user.About}</p>
				</>
			) : null
		}
		<section id='overview'>
			<div>
				<h2>Top Categories</h2>
				<ol>
					{
						tmap.Categories.map((cat) => (
							<li>
								<a href={`/map/${login_name}/${cat.Category}`}>
									{cat.Category}
								</a>
								<span>({cat.Count})</span>
							</li>
						))
					}
				</ol>
			</div>
			<div>
				<h2>Skip to Section</h2>
				<ul id='skip_to_link_section'>
					{
						used_sections.map((s) => (
							<li>
								<a href={`#${s}`}>{s}</a>
							</li>
						))
					}
				</ul>
			</div>
		</section>
		{
			used_sections.map((s) => {
				return (
					<section id={s} class='link_section'>
						<h2>{s}</h2>
						<ol>
							{tmap[s].map((link) => {
								if (s === 'Submitted' || s === 'Tagged') {
									return (
										<Link
											client:load
											Link={link}
											CategoriesFromUser={login_name}
											IsSummaryPage={false}
											IsTagPage={false}
											Token={token}
											User={signed_in_user}
										/>
									)
								} else {
									return (
										<Link
											client:load
											Link={link}
											IsSummaryPage={false}
											IsTagPage={false}
											Token={token}
											User={signed_in_user}
										/>
									)
								}
							})}
						</ol>
					</section>
				)
			})
		}
	</main>
</Layout>

<style>
	#overview {
		display: flex;
		gap: 50px;
	}
	#skip_to_link_section {
		list-style: none;
		padding: 0;
	}
	.link_section h2 {
		position: sticky;
		top: 0px;
		padding: 10px 0;
		background-color: #13151a;
	}
</style>
