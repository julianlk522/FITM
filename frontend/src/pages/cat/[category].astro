---
import Link from '../../components/Link'
import Pagination from '../../components/Pagination.astro'
import Layout from '../../layouts/Layout.astro'
import type {
	CategoryContributor,
	CategoryCount,
	PaginatedLinks,
} from '../../types'
import { Periods } from '../../types'

const { category } = Astro.params

const other_periods = Periods.filter((other) => other !== 'all')

const token = Astro.cookies.get('token')?.value
const user = Astro.cookies.get('user')?.value

const page = Astro.url.searchParams.get('page')
const page_num = page ? parseInt(page) : 1

const get_links_resp = await (token
	? fetch(`http://127.0.0.1:8000/links/cat/${category}`, {
			headers: { Authorization: `Bearer ${token}` },
		})
	: fetch(`http://127.0.0.1:8000/links/cat/${category}`))
const data: PaginatedLinks = await get_links_resp.json()
const links = data.Links
// [{URL: 'https://example.com', LikeCount: 100}, ...]

let subcats: CategoryCount[]
let top_contributors: CategoryContributor[]

if (!links || links.length === 0) {
	return Astro.redirect('/404')
} else {
	const subcats_resp = await fetch(
		`http://127.0.0.1:8000/links/subcat/${category}`
	)
	subcats = await subcats_resp.json()
	// [{Category: 'flowers', Count: 2}, ...]

	const top_contributors_resp = await fetch(
		`http://127.0.0.1:8000/links/cat/${category}/users`
	)
	top_contributors = await top_contributors_resp.json()
	// [{"Categories":"umvc3,2dfighters","LoginName":"bob","LinksSubmitted":"10"}]
}
---

<Layout Title='Welcome to the Open Internet Treasure Map (OITM)'>
	<main>
		<h1>{category}</h1>
		<section id='search-filters'>
			<h2>Filter Period</h2>
			<div>
				{
					other_periods.map((period) => (
						<a class='period' href={`/top/${period}/${category}`}>
							{period ? period : 'all'}
						</a>
					))
				}
			</div>
		</section>
		<section>
			{
				subcats.length ? (
					<>
						<h2>Subcategories</h2>
						<ol id='top-categories'>
							{subcats.map((subcat) => (
								<li>
									<strong>
										<a
											href={`/cat/${category},${subcat.Category}`}
										>
											{subcat.Category}
										</a>
									</strong>
									<span> ({subcat.Count})</span>
								</li>
							))}
						</ol>
					</>
				) : (
					<p>No further subcategories</p>
				)
			}
		</section>
		<section>
			<h2>Top Contributors</h2>
			<ol>
				{
					top_contributors.map((contributor: CategoryContributor) => (
						<li>
							<strong>
								<a href={`/map/${contributor.LoginName}`}>
									{contributor.LoginName}
								</a>
							</strong>
							<span> ({contributor.LinksSubmitted})</span>
						</li>
					))
				}
			</ol>
		</section>
		<section>
			<h2>Top Links</h2>

			<Pagination
				Period={'all'}
				Page={page_num}
				NextPage={data.NextPage}
			/>

			<ol>
				{
					links.map((link) => (
						<Link
							client:load
							Link={link}
							IsSummaryPage={false}
							IsTagPage={false}
							Token={token}
							User={user}
						/>
					))
				}
			</ol>

			{
				data.NextPage > 0 ? (
					<Pagination
						Period={'all'}
						Page={page_num}
						NextPage={data.NextPage}
					/>
				) : null
			}
		</section>
	</main>
</Layout>

<style>
	#search-filters {
		div {
			display: flex;
			align-items: center;
		}

		p {
			margin-top: 0;
		}

		.period {
			margin-left: 0.5rem;
		}

		.period:first-of-type {
			margin-left: 0;
		}
	}
	li strong:has(+ span) a {
		display: inline-block;
	}
</style>
