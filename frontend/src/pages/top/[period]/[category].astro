---
import Link from '../../../components/Link'
import Layout from '../../../layouts/Layout.astro'
import type {
	CategoryContributor,
	CategoryCount,
	LinkData,
	Period,
} from '../../../types'
import { Periods } from '../../../types'

const { category } = Astro.params
const { period } = Astro.params as { period: Period }
if (period && !Periods.includes(period)) {
	return Astro.redirect('/404')
} else if (period === 'all') {
	return Astro.redirect(`/cat/${category}`)
}
const other_periods = Periods.filter((other) => other !== period)

const token = Astro.cookies.get('token')?.value
const user = Astro.cookies.get('user')?.value

const get_links_resp = await (token
	? fetch(`http://127.0.0.1:8000/links/${period}/${category}`, {
			headers: { Authorization: `Bearer ${token}` },
		})
	: fetch(`http://127.0.0.1:8000/links/${period}/${category}`))
const links: LinkData[] = await get_links_resp.json()
// [{URL: 'https://example.com', LikeCount: 100}, ...]

let subcats: CategoryCount[]
let top_contributors: CategoryContributor[]

if (!links || links.length === 0) {
	return Astro.redirect('/404')
} else {
	// r.Get("/links/{period}/subcat/{categories}", handler.GetSubcategoriesByPeriod)
	const subcats_resp = await fetch(
		`http://127.0.0.1:8000/links/${period}/subcat/${category}`
	)
	subcats = await subcats_resp.json()
	// [{Category: 'flowers', Count: 2}, ...]

	// r.Get("/links/{period}/cat/{categories}/users", handler.GetTopCategoryContributorsByPeriod)
	const top_contributors_resp = await fetch(
		`http://127.0.0.1:8000/links/${period}/cat/${category}/users`
	)
	top_contributors = await top_contributors_resp.json()
	// [{"Categories":"umvc3,2dfighters","LoginName":"bob","LinksSubmitted":"10"}]
}
---

<Layout Title='Welcome to the Open Internet Treasure Map (OITM)'>
	<main>
		<h1>{category} ({period.charAt(0).toUpperCase() + period.slice(1)})</h1>
		<section id='search-filters'>
			<div>
				<p>Period Filter:</p>
				{
					other_periods.map((period) => (
						<a href={`/top/${period}/${category}`}>
							{period ? period : 'all'}
						</a>
					))
				}
				<a href=`/cat/${category}`>Remove</a>
			</div>
			<div>
				<p>Category Filter:</p>
				<a href=`/top/${period}`>Remove</a>
			</div>
		</section>
		<section>
			{
				subcats.length ? (
					<>
						<h2>Subcategories</h2>
						<ul>
							{subcats.map((subcat) => (
								<li>
									<>
										<strong>
											<a
												href={`/cat/${category},${subcat.Category}`}
											>
												{subcat.Category}
											</a>
										</strong>
										<span>: ({subcat.Count})</span>
									</>
								</li>
							))}
						</ul>
					</>
				) : (
					<p>No further subcategories</p>
				)
			}
		</section>
		<section>
			<h2>Top Contributors</h2>
			<ol>
				{
					top_contributors.map((contributor: CategoryContributor) => (
						<li>
							<strong>
								<a href={`/map/${contributor.LoginName}`}>
									{contributor.LoginName}
								</a>
							</strong>
							<span>: ({contributor.LinksSubmitted})</span>
						</li>
					))
				}
			</ol>
		</section>
		<section>
			<h2>Top Links</h2>
			<ol>
				{
					links.map((link) => (
						<Link
							client:load
							Link={link}
							IsSummaryPage={false}
							IsTagPage={false}
							Token={token}
							User={user}
						/>
					))
				}
			</ol>
		</section>
	</main>
</Layout>

<style>
	#search-filters {
		font-size: 0.9rem;

		div {
			display: flex;
		}

		p {
			margin-top: 0;
		}

		a {
			margin-left: 0.5rem;
		}
	}
	li strong:has(+ span) a {
		display: inline-block;
	}
</style>
