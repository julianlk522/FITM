---
import Link from '../../components/Link'
import ScrollUp from '../../components/ScrollUp.astro'
import Layout from '../../layouts/Layout.astro'
import {
	Periods,
	type CategoryCount,
	type LinkData,
	type Period,
} from '../../types'

// get auth token and user if user signed in
const token = Astro.cookies.get('token')?.value
const user = Astro.cookies.get('user')?.value

const { period } = Astro.params as { period: Period }
if (period && !Periods.includes(period)) {
	return Astro.redirect('/404')
}
const other_periods = Periods.filter((other) => other !== period)

const links_api_url =
	period === 'all'
		? 'http://127.0.0.1:8000/links'
		: `http://127.0.0.1:8000/links/${period}`
const get_links_resp = await (token
	? fetch(links_api_url, {
			headers: { Authorization: `Bearer ${token}` },
		})
	: fetch(links_api_url))
const links: LinkData[] = await get_links_resp.json()
// [{URL: 'https://example.com', LikeCount: 100}, ...]

const cats_api_url =
	period === 'all'
		? 'http://127.0.0.1:8000/tags/popular'
		: `http://127.0.0.1:8000/tags/popular/${period}`
const top_cats_resp = await (token
	? fetch(cats_api_url, {
			headers: { Authorization: `Bearer ${token}` },
		})
	: fetch(cats_api_url))
// [{Category: 'umvc3', Count: 1}, ...]
const top_cats: CategoryCount[] = await top_cats_resp.json()
---

<Layout Title='Welcome to the Open Internet Treasure Map (OITM)'>
	<main>
		<h1>
			{`Top (${period.charAt(0).toUpperCase() + period.slice(1)})`}
		</h1>
		<section id='change-period'>
			<p>Change time duration:</p>
			{
				other_periods.map((period) => (
					<a class='period' href={`/top/${period}`}>
						{period ? period : 'all'}
					</a>
				))
			}
		</section>
		<section>
			<h2>Categories</h2>
			<ol id='top-categories'>
				{
					top_cats.map((cat) => (
						<li>
							<a href={`/top/${period}/${cat.Category}`}>
								{cat.Category}
							</a>
							<span>({cat.Count})</span>
						</li>
					))
				}
			</ol>
		</section>
		<section>
			<h2>Links</h2>
			{
				links.length ? (
					<ol id='links'>
						{links.map((link) => (
							<Link
								client:load
								IsSummaryPage={false}
								IsTagPage={false}
								Link={link}
								Token={token}
								User={user}
							/>
						))}
					</ol>
				) : (
					<>
						<p>No results</p>
						{user ? (
							<p>
								<a href={`/new`}>Add link</a>
							</p>
						) : null}
					</>
				)
			}
		</section>

		<ScrollUp />
	</main>
</Layout>

<style>
	#change-period {
		font-size: 0.9rem;
		display: flex;

		p {
			margin-top: 0;
		}
	}
	#top-categories {
		display: flex;
		flex-direction: column;
		flex-wrap: wrap;
		height: 160px;
	}
	.period {
		margin-left: 0.5rem;
	}
	#links {
		padding: 0;
	}
</style>
